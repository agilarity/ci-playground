name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

# ------------------------------------------------------------------------------------------------------------
# Event `push`: Compare the preceeding commit -> to the current commit of the main branch.
# Event `pull_request`: Compare the last commit of main -> to the current commit of a Pull Request branch.
# ------------------------------------------------------------------------------------------------------------

jobs:
  build:
    runs-on: ubuntu-latest # windows-latest | macos-latest
    name: Test changed-files
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 # OR "2" -> To retrieve the preceding commit.

      # Example 1
      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v36

        # To compare changes between the current commit and the last pushed remote commit set `since_last_remote_commit: true`. e.g
        # with:
        #   since_last_remote_commit: true

      - name: List all changed files
        run: |
          for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
            echo "$file was changed"
          done

      # Example 2
      - name: Get changed files in the example folder
        id: changed-files-specific
        uses: tj-actions/changed-files@v36
        with:
          files: examples

      - name: Run step if any file(s) in the docs folder change
        if: steps.changed-files-specific.outputs.any_changed == 'true'
        run: |
          example_file_directories=$(
              for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
                  echo $file | grep -o1 -Ei "^examples\/.*\/"
              done
          )

          declare -a example_directories=($example_file_directories)
          declare -A unique_example_directories
          for dir in "${example_directories[@]}"; do
              unique_example_directories[$dir]=0
          done

          for dir in ${!unique_example_directories[@]}; do
              echo "Verifying $dir"
          done
